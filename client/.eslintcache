[{"/Users/younessbennaj/FULL_STACK_PROJECTS/event-app/client/src/App.tsx":"1","/Users/younessbennaj/FULL_STACK_PROJECTS/event-app/client/src/index.tsx":"2","/Users/younessbennaj/FULL_STACK_PROJECTS/event-app/client/src/styles/global-style.js":"3","/Users/younessbennaj/FULL_STACK_PROJECTS/event-app/client/src/components/Card.tsx":"4","/Users/younessbennaj/FULL_STACK_PROJECTS/event-app/client/src/components/Grid.tsx":"5"},{"size":571,"mtime":1608116629733,"results":"6","hashOfConfig":"7"},{"size":272,"mtime":1608052347454,"results":"8","hashOfConfig":"7"},{"size":896,"mtime":1608046598283,"results":"9","hashOfConfig":"10"},{"size":497,"mtime":1608113864953,"results":"11","hashOfConfig":"7"},{"size":987,"mtime":1608114710709,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15g58rr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"drx27z",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/younessbennaj/FULL_STACK_PROJECTS/event-app/client/src/App.tsx",[],"/Users/younessbennaj/FULL_STACK_PROJECTS/event-app/client/src/index.tsx",[],"/Users/younessbennaj/FULL_STACK_PROJECTS/event-app/client/src/styles/global-style.js",[],"/Users/younessbennaj/FULL_STACK_PROJECTS/event-app/client/src/components/Card.tsx",["23"],"/Users/younessbennaj/FULL_STACK_PROJECTS/event-app/client/src/components/Grid.tsx",["24"],{"ruleId":"25","severity":1,"message":"26","line":5,"column":31,"nodeType":"27","messageId":"28","endLine":5,"endColumn":34,"suggestions":"29"},{"ruleId":"25","severity":1,"message":"26","line":6,"column":31,"nodeType":"27","messageId":"28","endLine":6,"endColumn":34,"suggestions":"30"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["31","32"],["33","34"],{"messageId":"35","fix":"36","desc":"37"},{"messageId":"38","fix":"39","desc":"40"},{"messageId":"35","fix":"41","desc":"37"},{"messageId":"38","fix":"42","desc":"40"},"suggestUnknown",{"range":"43","text":"44"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"43","text":"45"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"46","text":"44"},{"range":"46","text":"45"},[168,171],"unknown","never",[197,200]]